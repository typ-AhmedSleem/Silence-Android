apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

archivesBaseName = "libpastelog"
version = "1.1.2"
group = "org.whispersystems"

buildscript {
    repositories {
        maven {
            url "https://repo1.maven.org/maven2"
        }
        // Required for the Gradle plugin
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.0'
    }
}

repositories {
    google()
    jcenter()
    mavenCentral()
    mavenLocal()
}

android {

    compileSdk 33
    setBuildToolsVersion('33.0.1')
    namespace "org.whispersystems.libpastelog"

    defaultConfig {
        minSdkVersion 14
        //noinspection EditedTargetSdkVersion
        targetSdkVersion 33
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            resources.srcDirs = ['src']
            res.srcDirs = ['res']
            java.srcDirs = ['src']
        }
    }
}

dependencies {
    //noinspection GradleCompatible
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.squareup.okhttp3:okhttp:3.9.0'
}

tasks.whenTaskAdded { task ->
    if (task.name.equals("lint")) {
        task.enabled = false
    }
}

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}

def getReleaseRepositoryUrl() {
    return hasProperty('sonatypeRepo') ? sonatypeRepo
            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getRepositoryUsername() {
    return hasProperty('whisperSonatypeUsername') ? whisperSonatypeUsername : ""
}

def getRepositoryPassword() {
    return hasProperty('whisperSonatypePassword') ? whisperSonatypePassword : ""
}


signing {
    required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

//uploadArchives {
//    configuration = configurations.archives
//    repositories.mavenDeployer {
//        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//
//        repository(url: getReleaseRepositoryUrl()) {
//            authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
//        }
//
//        pom.project {
//            name 'libpastelog'
//            packaging 'aar'
//            description 'Easily allow users to post debug logs online'
//            url 'https://github.com/signalapp/libpastelog'
//
//            scm {
//                url 'scm:git@github.com:signalapp/libpastelog.git'
//                connection 'scm:git@github.com:signalapp/libpastelog.git'
//                developerConnection 'scm:git@github.com:signalapp/libpastelog.git'
//            }
//
//            licenses {
//                license {
//                    name 'GPLv3'
//                    url 'https://www.gnu.org/licenses/gpl-3.0.txt'
//                    distribution 'repo'
//                }
//            }
//
//            developers {
//                developer {
//                    name 'Moxie Marlinspike'
//                }
//            }
//        }
//    }
//}

task installArchives(type: Upload) {
    description "Installs the artifacts to the local Maven repository."
    configuration = configurations['archives']
    repositories {
        mavenDeployer {
            repository url: "file://${System.properties['user.home']}/.m2/repository"
        }
    }
}


//apply from: '../gradle-mvn-push.gradle'
//
//afterEvaluate { project ->
//    android.libraryVariants.all { variant ->
//        tasks.androidJavadocs.doFirst {
//            classpath += files(variant.javaCompile.classpath.files)
//        }
//    }
//}
