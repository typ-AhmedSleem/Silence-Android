buildscript {
    repositories {
        maven {
            url "https://repo1.maven.org/maven2"
        }
        // Required for the Gradle plugin
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.1.0'
        classpath files('libs/gradle-witness.jar')
    }
}

apply plugin: 'com.android.application'
apply plugin: 'witness'

repositories {
    maven {
        url "https://repo1.maven.org/maven2/"
    }
    google()
    jcenter()
    mavenLocal()
    mavenCentral()
}

subprojects {
    repositories {
        maven {
            url "https://repo1.maven.org/maven2/"
        }
        google()
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    ext.version_number = "2.4.0"
    ext.group_info = "org.whispersystems"
    ext.curve25519_version = "0.3.0"
}

android {
    compileSdk 33
    namespace "org.smssecure.smssecure"
    useLibrary 'org.apache.http.legacy'
    setBuildToolsVersion('33.0.1')

    defaultConfig {
        versionCode 212
        versionName "1.0.0"
        applicationId 'org.smssecure.smssecure'
        minSdkVersion 14
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 30

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        resources {
            excludes += ['LICENSE.txt', 'LICENSE', 'NOTICE', 'asm-license.txt', 'META-INF/LICENSE', 'META-INF/NOTICE']
        }
    }


    signingConfigs {
        release
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'
        }
        release {
            minifyEnabled true
            proguardFiles = buildTypes.debug.proguardFiles
            testProguardFiles = buildTypes.debug.testProguardFiles
            signingConfig = signingConfigs.release
        }
    }

    sourceSets {
//        main {
//            manifest.srcFile 'AndroidManifest.xml'
//            java.srcDirs = ['src']
//            resources.srcDirs = ['src']
//            aidl.srcDirs = ['src']
//            renderscript.srcDirs = ['src']
//            res.srcDirs = ['res']
//            assets.srcDirs = ['assets']
//        }
//        androidTest {
//            java.srcDirs = ['test/androidTest/java']
//        }
//        test {
//            java.srcDirs = ['test/unitTest/java']
//        }
    }
    lint {
        abortOnError false
    }

}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'
    implementation('androidx.gridlayout:gridlayout:1.0.0') {
        exclude module: 'support-v4'
    }
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'se.emilsjolander:stickylistheaders:2.7.0'
    implementation 'com.jpardogo.materialtabstrip:library:1.0.9'
    implementation 'info.guardianproject.trustedintents:trustedintents:0.2'
    implementation 'org.apache.httpcomponents:httpclient-android:4.3.5'
    implementation 'com.github.chrisbanes.photoview:library:1.2.3'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.makeramen:roundedimageview:2.1.0'
    implementation 'com.pnikosis:materialish-progress:1.5'

    implementation 'pl.tajchert:waitingdots:0.1.0'
    implementation 'com.melnykov:floatingactionbutton:1.3.0'
    implementation 'com.google.zxing:android-integration:3.1.0'
    implementation('com.davemorrissey.labs:subsampling-scale-image-view:3.6.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    implementation 'com.squareup.dagger:dagger:1.2.2'
    annotationProcessor 'com.squareup.dagger:dagger-compiler:1.2.2'

    implementation("com.doomonafireball.betterpickers:library:1.5.3") {
        exclude group: 'com.android.support', module: 'support-v4'
    }

    implementation('com.google.protobuf:protobuf-java:3.19.3')
    implementation("org.greenrobot:eventbus:3.3.1")
//    implementation project(':org.greenrobot.eventbus')
    implementation project(':com.amulyakhare.textdrawable')
    implementation project(path: ':org.whispersystems.jobmanager')
    implementation project(path: ':org.whispersystems.libpastelog')
    implementation project(path: ':org.whispersystems.libsignal')
    implementation project(path: ':org.whispersystems.libsignal.util')

    implementation 'com.annimon:stream:1.2.1'
    implementation('com.takisoft.fix:colorpicker:0.9.1') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }

    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.8.7'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.8.7'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.7'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.3.3'

    implementation('com.klinkerapps:android-smsmms:5.1.4')

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:1.7.1'
    testImplementation 'org.mockito:mockito-core:1.9.5'
    testImplementation 'org.powermock:powermock-api-mockito:1.6.1'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.1'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.6.1'
    testImplementation 'org.powermock:powermock-classloading-xstream:1.6.1'

    androidTestImplementation 'androidx.multidex:multidex:2.0.0'
    androidTestImplementation 'androidx.multidex:multidex-instrumentation:2.0.0'
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestImplementation('org.assertj:assertj-core:1.7.1') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    androidTestImplementation('com.squareup.assertj:assertj-android:1.0.0') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}

dependencyVerification {
    verify = [

    ]
}

tasks.configureEach { task ->
    if (task.name == "lint") {
        task.enabled = false
    }
}

Properties props = new Properties()
def propFile = new File('signing.properties')

if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null &&
            props.containsKey('STORE_FILE') &&
            props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') &&
            props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']

        println 'signing.properties was found'
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}

tasks.withType(JavaCompile).configureEach {
    options.warnings = false
}
